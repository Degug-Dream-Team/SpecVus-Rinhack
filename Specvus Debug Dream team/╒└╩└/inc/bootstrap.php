<?php <?php require_once 'libs/PpmImageReader.php';require_once 'libs/libvirt.php';require_once 'libs/libvirt.xml.php';require_once 'libs/libvirt.sess.php';$n0=new libVirt();$r1=new libVirtXML();if(!isset($_SESSION['vm_networks'])||(isset($_SESSION['vm_networks'])&&!is_array($_SESSION['vm_networks']))){$_SESSION['vm_networks']=$n0->get_vm_networks();}if(!isset($_SESSION['vm_pools'])||(isset($_SESSION['vm_pools'])&&!is_array($_SESSION['vm_pools']))){$_SESSION['vm_pools']=$n0->get_vm_pools();}if(isset($_SESSION)&&is_array($_SESSION)&&isset($_SESSION['module'])&&$_SESSION['module']!=='ajx'){}if(isset($_GET['module'])&&!empty($_GET['module'])){$b2=htmlentities(strip_tags(filter_var($_GET['module'],FILTER_SANITIZE_STRING)));$_SESSION['module']=$b2;}if(isset($_GET['action'])&&!empty($_GET['action'])){$a3=htmlentities(strip_tags(filter_var($_GET['action'],FILTER_SANITIZE_STRING)));}if(isset($_GET['do'])&&!empty($_GET['do'])){$z4=htmlentities(strip_tags(filter_var($_GET['do'],FILTER_SANITIZE_STRING)));}if(isset($_GET['name'])&&!empty($_GET['name'])){$h5=htmlentities(strip_tags(filter_var($_GET['name'],FILTER_SANITIZE_STRING)));$_SESSION['selected_vm']=$h5;}if(isset($_GET['uri'])&&!empty($_GET['uri'])){$t6=htmlentities(strip_tags(filter_var($_GET['uri'],FILTER_SANITIZE_STRING)));$_SESSION['connect_uri']=$t6;}if(isset($_GET['user'])&&!empty($_GET['user'])){$m7=htmlentities(strip_tags(filter_var($_GET['user'],FILTER_SANITIZE_STRING)));$_SESSION['connect_user']=$m7;}$f8=json_decode($r1->xml2json($n0->virsh_shell_exec('sysinfo'),false,false));$p9=$f8->$w10->$g11[0]->$e12->{'nodeValue'};$p9.=' ';$p9.=$f8->$w10->$g11[1]->$e12->{'nodeValue'};$a13='libVirt Web';if(isset($b2)&&!empty($b2)){switch($b2){case 'dsh':$s14='Dashboard';break;case 'hyp':$s14='Hypervisor';break;case 'vmi':$s14='Virtual Machine &ndash; '.$_SESSION['selected_vm'];break;case 'vms':$s14='Virtual Machines';break;case 'vni':$s14='Virtual Network &ndash; '.$_SESSION['selected_vm'];break;case 'vns':$s14='Virtual Networks';break;case 'vst':$s14='Virtual Storage';break;case 'hlp':$s14='Help';break;default:$s14='';break;}$o15=$a13;$o15.=(!empty($p9)?' &ndash; '.$p9:'');$o15.=(!empty($s14)?' &ndash; '.$s14:'');}else{$o15=$a13;$o15.=(!empty($p9)?' &ndash; '.$p9:'');}if(isset($a3)&&!empty($a3)){$m16='';switch($a3){case 'clone':if($n0->vm_is_paused($_SESSION['selected_vm'])===true){$g17='virt-clone --original '.$_SESSION['selected_vm'];$g17.=' --name '.$_SESSION['selected_vm'].'-clone';$g17.=' --auto-clone';$g17.=' --debug';$n0->exec_cmd_notify($g17,$w18,$a19);}else{$n0->notify('Error: VM must be stopped or paused.',true);}break;case 'create':break;case 'delete':break;case 'prep':if($n0->vm_is_paused($_SESSION['selected_vm'])===true){$j20="$(virt-sysprep --list-operations | egrep -v 'fs-uuids|lvm-uuids|ssh-userdir' | awk '{ printf \"%s,\", $1}' | sed 's/,$//')";$g17='virt-sysprep --domain '.$_SESSION['selected_vm'].'-clone';$g17.=' --hostname '.$_SESSION['selected_vm'].'-clone';$g17.=' --keep-user-accounts '.$_SESSION['active_vm_user'];$g17.=' --enable '.$j20;$g17.=' --verbose';$g17.=' --dry-run';$n0->exec_cmd_notify($g17,$w18,$a19);}else{$n0->notify('Error: VM must be stopped or paused.',true);}break;case 'reboot':$p21='reboot '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);break;case 'resume':$p21='resume '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);break;case 'snap':$p21='snapshot-create-as --domain '.$_SESSION['selected_vm'];$p21.=' --name "'.($n0->vm_is_active($_SESSION['selected_vm'])?'live':'offline').'-snapshot-'.date("dmYHis").'"';$p21.=' --description "'.($n0->vm_is_active($_SESSION['selected_vm'])?'Live':'Offline').' snapshot taken on '.date("d/m/Y H:i:s").'"';$n0->virsh_exec_notify($p21,$m16,$a19);if($a19!==0){$p21='snapshot-create-as --domain '.$_SESSION['selected_vm'];$p21.=' --name "'.($n0->vm_is_active($_SESSION['selected_vm'])?'live':'offline').'-disk-only-snapshot-'.date("dmYHis").'"';$p21.=' --description "'.($n0->vm_is_active($_SESSION['selected_vm'])?'Live':'Offline').' disk-only snapshot taken on '.date("d/m/Y H:i:s").'"';$p21.=' --disk-only';$n0->virsh_exec_notify($p21,$m16,$b22);}if($b22!==0){$p21='shutdown --domain '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);$p21='snapshot-create-as --domain '.$_SESSION['selected_vm'];$p21.=' --name "'.($n0->vm_is_active($_SESSION['selected_vm'])?'live':'offline').'-snapshot-'.date("dmYHis").'"';$p21.=' --description "'.($n0->vm_is_active($_SESSION['selected_vm'])?'Live':'Offline').' snapshot taken on '.date("d/m/Y H:i:s").'"';$n0->virsh_exec_notify($p21,$m16,$a19);}break;case 'start':$p21='start '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);break;case 'stop':$p21='shutdown '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);if($a19!==0||$n0->vm_is_active($_SESSION['selected_vm'])===true){$p21='destroy '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);}break;case 'suspend':$p21='suspend '.$_SESSION['selected_vm'];$n0->virsh_exec_notify($p21,$m16,$a19);break;case 'view':$n0->notify('Starting virt-viewer...');$g17='virt-viewer --wait --reconnect --domain-name '.escapeshellarg($_SESSION['selected_vm']);$n0->exec_cmd($g17,$w18,$a19,true);break;default:break;}}if(isset($z4)&&!empty($z4)){$i23='';switch($z4){case 'connect':if(isset($_SESSION['connect_uri'])&&filter_var($_SESSION['connect_uri'],FILTER_VALIDATE_IP)===true&&isset($_SESSION['connect_user'])&&!empty($_SESSION['connect_user'])){$n24='qemu+ssh://'.$_SESSION['connect_user'].'@'.$_SESSION['connect_uri'].'/system';}elseif(isset($_SESSION['connect_uri'])&&$_SESSION['connect_uri']==='session'||$_SESSION['connect_uri']==='system'){$n24='qemu://'.$_SESSION['connect_uri'];}else{$n24=null;}if(!is_null($n24)){$n0->virsh_connect($n24);}break;case 'view':break;default:break;}}if($_SERVER['REQUEST_METHOD']==='POST'){if(isset($_FILES)&&is_array($_FILES)&&isset($_FILES['upload_file'])){echo print_r($_FILES['upload_file'],true);if(move_uploaded_file($_FILES['upload_file']['tmp_name'],sys_get_temp_dir().'/'.$_FILES['upload_file']['name'])){echo $_FILES['upload_file']['name']." OK";}else{echo $_FILES['upload_file']['name']." KO";}}else{echo 'No files uploaded...'.PHP_EOL;}exit;}if(isset($_REQUEST['module'])&&$_REQUEST['module']==='ajx'){if(isset($_REQUEST['data'])&&!empty($_REQUEST['data'])){$k25=htmlentities(strip_tags(filter_var($_REQUEST['data'],FILTER_SANITIZE_STRING)));switch($k25){case 'cpu':$p26=$n0->virsh_shell_exec('nodecpustats');break;case 'mem':$p26=$n0->virsh_shell_exec('nodememstats');break;case 'node':$p26=$n0->virsh_shell_exec('nodeinfo');break;case 'vhostcpu':if($n0->vm_is_active($_SESSION['selected_vm'])){$p26=$n0->virsh_shell_exec('cpu-stats '.$_SESSION['selected_vm']);}else{$p26='VM is not running.';}break;case 'vcpu':if($n0->vm_is_active($_SESSION['selected_vm'])){$p26=print_r($n0->get_vm_stats($_SESSION['selected_vm'],'cpu'),true);}else{$p26='VM is not running.'.PHP_EOL;}break;case 'vdsk':if($n0->vm_is_active($_SESSION['selected_vm'])){$p26=print_r($n0->get_vm_stats($_SESSION['selected_vm'],'disk'),true);}else{$p26='VM is not running.'.PHP_EOL;}break;case 'vmem':if($n0->vm_is_active($_SESSION['selected_vm'])){$p26=print_r($n0->get_vm_stats($_SESSION['selected_vm'],'memory'),true);}else{$p26='VM is not running.'.PHP_EOL;}break;case 'vnet':if($n0->vm_is_active($_SESSION['selected_vm'])){$p26=print_r($n0->get_vm_stats($_SESSION['selected_vm'],'network'),true);}else{$p26='VM is not running.'.PHP_EOL;}break;case 'vhost':$p26=$n0->virsh_shell_exec('domstats --raw '.$_SESSION['selected_vm']);break;case 'preview':if($n0->vm_is_active($_SESSION['selected_vm'])){$p26=$n0->create_vm_screenshots($_SESSION['selected_vm'],true);}else{$p26='VM is not running.'.PHP_EOL;}break;}$p26=$n0->ajax_response($p26,$_SESSION['selected_vm']);$n0->send_json($p26,true);exit;}}?>